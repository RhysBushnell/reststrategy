auth:
  # https://pocketbase.io/docs/api-authentication/
  pocketBaseAuth:
    type: CustomToToken
    custom:
      authUrl: http://127.0.0.1:8090/api/admins/auth-via-email
      credential:
        email: test@example.com
        password: P4s$w0rd123!
      responseKey: $.token
      headerKey: Authorization
      tokenPrefix: Admin
seed:
  create-pocketbase-admin2:
    endpoint: http://127.0.0.1:8090/api/admins
    strategy: FIND/PATCH/POST
    getEndpointSuffix: "?page=1&perPage=100&sort=-created&filter="
    findByJsonPathExpr: "$.items[?(@.email=='test2@example.com')].id"
    authMapRef: pocketBaseAuth
    payloadTemplate: |
      {"email": "test2@example.com",
        "password": "${password}","passwordConfirm": "${password}",
        "avatar": 8
      }
    # if a user does exist ensure password is set to below
    patchPayloadTemplate: |
      {
        "password": "${password}",
        "passwordConfirm": "${password}"
      }
    variables:
      # AWSPARAMSTR:///int-test/pocketbase/admin-pwd
      password: password123!
    runtimeVars:
      admin1AvatarId: "$.avatar"
  create-pocketbase-admin3:
    # /api/admins
    endpoint: http://127.0.0.1:8090/api/admins
    strategy: FIND/PATCH/POST
    getEndpointSuffix: "?page=1&perPage=100&sort=-created&filter="
    # postEndpointSuffix: /post
    findByJsonPathExpr: "$.items[?(@.email=='test3@example.com')].id"
    authMapRef: pocketBaseAuth
    payloadTemplate: |
      {"email": "test3@example.com",
        "password": "${password}",
        "passwordConfirm": "${password}",
        "avatar": 8
      }
    patchPayloadTemplate: |
      {
        "password": "${password}",
        "passwordConfirm": "${password}",
        "avatar": ${admin1AvatarId}
      }
    variables:
      password: password789!000
  create-pocketbase-test-collection:
    # /api/admins
    endpoint: http://127.0.0.1:8090/api/collections
    strategy: FIND/PATCH/POST
    getEndpointSuffix: "?page=1&perPage=100&sort=-created&filter="
    # postEndpointSuffix: /post
    findByJsonPathExpr: "$.items[?(@.name=='test')].id"
    authMapRef: pocketBaseAuth
    payloadTemplate: |
      {"id":"","created":"","updated":"","name":"test","system":false,"listRule":null,"viewRule":null,"createRule":null,"updateRule":null,"deleteRule":null,
      "schema":[
      {"id":"","name":"custom1","type":"text","system":false,"required":false,"unique":false,"options":{"pattern":"^\\w+$"},"originalName":"field","toDelete":false},
      {"id":"","name":"customJson","type":"json","system":false,"required":false,"unique":false,"options":{},"originalName":"field","toDelete":false}
      ],"originalName":""}
    patchPayloadTemplate: |
      {"id":"${testCollectionPatchId}",
      "schema":[
        {"id":"yd15nwug","name":"custom1","type":"text","system":false,"required":false,"unique":false,"options":{"min":null,"max":null,"pattern":"^\\w+$"},"originalName":"custom1","toDelete":false},
        {"id":"ipcsxpqy","name":"customJson","type":"json","system":false,"required":false,"unique":false,"options":{},"originalName":"customJson","toDelete":false},
        {"id":"","name":"fieldNumber","type":"number","system":false,"required":false,"unique":false,"options":{"max":1111111,"min":-1111111},"originalName":"field","toDelete":false}
      ],
      "originalName":"test"}
    runtimeVars:
      testCollectionPatchId: $.items[?(@.name=='test')].id
  create-pocketbase-user-for-qa-test:
    endpoint: http://127.0.0.1:8090/api/users
    strategy: FIND/PATCH/POST
    getEndpointSuffix: "?page=1&perPage=100&sort=-created&filter="
    findByJsonPathExpr: "$.items[?(@.email=='qa-guy@example.com')].id"
    authMapRef: pocketBaseAuth
    payloadTemplate: |
      {"email":"qa-guy@example.com","password":"Password123","passwordConfirm":"Password123"}
    patchPayloadTemplate: |
      {"password":"Password456","passwordConfirm":"Password456"}

